{"version":3,"sources":["redux/actionsTypes.js","history.js","AuthMockup.js","redux/actions.js","components/Input/index.js","components/InputError/index.js","pages/LogIn/index.js","components/navBar/index.js","pages/Questions.js","pages/FinalScreen.js","App.js","redux/reducer.js","data.js","redux/store.js","index.js"],"names":["CHANGE_SCORE","LOGIN_SUCCESS","createHashHistory","user","Promise","resolve","setTimeout","handleScoreChange","payload","type","Input","value","change","label","name","TextField","size","onChange","id","style","width","InputError","errorText","Typography","sx","mb","color","variant","display","gutterBottom","textAlign","LogIn","dispatch","useDispatch","useState","username","email","password","formValues","setFormValues","formErrors","setFormErrors","isSubmit","setIsSubmit","sleep","ms","handleChange","e","target","handleSubmit","a","preventDefault","validate","useEffect","Object","keys","length","AuthService","login","then","data","history","push","values","errors","test","Container","maxWidth","Box","Grid","container","spacing","direction","alignItems","justifyContent","minHeight","component","margin","noValidate","autoComplete","onSubmit","className","Button","NavBar","useSelector","state","AppBar","position","Toolbar","Questions","questions","score","questionIndex","setQuestionIndex","suffleChoices","choices","sort","Math","random","handleClickAnswer","question","textContent","answer","mt","map","onClick","FinalScreen","disptach","useHistory","fontWeight","round","Number","App","basename","path","exact","initialState","isLoggedIn","reducer","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxThunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.09b6bd66.chunk.js","sourcesContent":["export const CHANGE_SCORE = \"CHANGE_SCORE\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\n","import { createHashHistory  } from 'history'; \r\nexport default createHashHistory ();","class AuthService {\r\n\r\n  login(user) {\r\n    return new Promise( resolve =>  {\r\n        setTimeout(resolve, 2000);\r\n    })\r\n   \r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new AuthService();\r\n","import {\n  CHANGE_SCORE,\n  LOGIN_SUCCESS,\n} from \"./actionsTypes\";\n\nimport history from \"../history\";\n\nimport AuthService from \"../AuthMockup\";\n\n\nexport const login = (user) => (dispatch) => {\n  return AuthService.login(user).then((data) => {\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: { user: user },\n    });\n    history.push(\"/exam\");\n    return Promise.resolve();\n  });\n};\n\nexport const handleScoreChange = (payload) => ({\n  type: CHANGE_SCORE,\n  payload,\n});\n\n","import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nconst Input = ({value, change, label, name, type}) => {\r\n  return (\r\n    <TextField\r\n      size=\"normal\"\r\n      type={type}\r\n      value={value}\r\n      onChange={change}\r\n      id=\"outlined-required\"\r\n      label={label}\r\n      name={name}\r\n      style={{\r\n        width: \"100%\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { Typography } from \"@mui/material\";\r\nconst InputError = ({errorText}) => {\r\n  return (\r\n    <Typography\r\n      sx={{ mb: 2 }}\r\n      color=\"red\"\r\n      variant=\"overline\"\r\n      display=\"block\"\r\n      gutterBottom\r\n      style={{\r\n        textAlign: \"left\",\r\n      }}\r\n    >\r\n        {errorText}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default InputError;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Grid, Button, Container } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../../redux/actions\";\r\nimport Input from \"../../components/Input\";\r\nimport InputError from \"../../components/InputError\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst LogIn = () => {\r\n  const dispatch = useDispatch();\r\n  const initialValues = { username: \"\", email: \"\", password: \"\" };\r\n  const [formValues, setFormValues] = useState(initialValues);\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n\r\n  const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({ ...formValues, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await sleep(300);\r\n    setFormErrors(validate(formValues));\r\n    setIsSubmit(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\r\n      dispatch(login(formValues));\r\n    }\r\n  }, [dispatch, formErrors, formValues, isSubmit]);\r\n\r\n  // validate the Inputs\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n    if (!values.username) {\r\n      errors.username = \"Username is required!\";\r\n    }\r\n    if (!values.email) {\r\n      errors.email = \"Email is required!\";\r\n    } else if (!regex.test(values.email)) {\r\n      errors.email = \"This is not a valid email format!\";\r\n    }\r\n    if (!values.password) {\r\n      errors.password = \"Password is required\";\r\n    } else if (values.password.length < 4) {\r\n      errors.password = \"Password must be more than 4 characters\";\r\n    } else if (values.password.length > 10) {\r\n      errors.password = \"Password cannot exceed more than 10 characters\";\r\n    }\r\n    return errors;\r\n  };\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Box textAlign=\"center\">\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{ minHeight: \"100vh\" }}\r\n        >\r\n          <Box\r\n            component=\"form\"\r\n            sx={{\r\n              margin: 0,\r\n              width: \"100%\",\r\n            }}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <div className=\"logIn_container\">\r\n              <Input\r\n                value={formValues.username}\r\n                change={handleChange}\r\n                label=\"Name\"\r\n                name=\"username\"\r\n                type=\"text\"\r\n              />\r\n              <InputError errorText={formErrors.username} />\r\n              <Input\r\n                value={formValues.email}\r\n                change={handleChange}\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n              />\r\n              <InputError errorText={formErrors.email} />\r\n              <Input\r\n                value={formValues.password}\r\n                change={handleChange}\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n              />\r\n              <InputError errorText={formErrors.password} />\r\n              <Button className=\"logIn_btn\" type=\"submit\" variant=\"contained\">\r\n                Submit\r\n              </Button>\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","import React from 'react';\r\nimport {  useSelector } from \"react-redux\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst NavBar = () => {\r\n    const { user} = useSelector((state) => state);\r\n  return (\r\n    <AppBar position=\"static\">\r\n    <Toolbar variant=\"dense\">\r\n      <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\r\n       {user.username}\r\n      </Typography>\r\n    </Toolbar>\r\n  </AppBar>\r\n  )\r\n}\r\n\r\nexport default NavBar","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport NavBar from \"../components/navBar\";\n\nimport { Button, Typography, Grid } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nimport { handleScoreChange } from \"../redux/actions\";\n\nimport history from \"../history\";\n\nconst Questions = () => {\n  const dispatch = useDispatch();\n\n  const { questions, score, user } = useSelector((state) => state);\n  const [questionIndex, setQuestionIndex] = useState(0);\n\n  const suffleChoices = questions[questionIndex].choices.sort(\n    () => Math.random() - 0.5\n  );\n\n  const handleClickAnswer = (e) => {\n    const question = questions[questionIndex];\n    if (e.target.textContent === question.answer) {\n      dispatch(handleScoreChange(score + 1));\n    }\n    if (questionIndex + 1 < questions.length) {\n      setQuestionIndex(questionIndex + 1);\n    } else {\n      history.push(\"/result\");\n    }\n  };\n\n  if (user === null) {\n    history.push(\"/\");\n  }\n\n  return (\n    <>\n      <NavBar />\n      <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        style={{ minHeight: \"100vh\" }}\n      >\n        <Box textAlign={\"center\"}>\n          <Typography variant=\"h4\">Question {questionIndex + 1}</Typography>\n          <Typography mt={5}>{questions[questionIndex].question}</Typography>\n          {suffleChoices.map((data, id) => (\n            <Box mt={2} key={id}>\n              <Button onClick={handleClickAnswer} variant=\"contained\">\n                {data}\n              </Button>\n            </Box>\n          ))}\n        </Box>\n      </Grid>\n    </>\n  );\n};\n\nexport default Questions;\n","import { Button, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { handleScoreChange } from \"../redux/actions\";\nimport NavBar from \"../components/navBar\";\n\n\nconst FinalScreen = () => {\n  const disptach = useDispatch();\n  const history = useHistory();\n  const { score, user } = useSelector((state) => state);\n\n  const handleBack = () => {\n    disptach(handleScoreChange(0));\n    history.push(\"/\");\n  };\n\n  if (user === null) {\n    history.push(\"/\");\n  }\n\n  return (\n    <>\n    <NavBar />\n    <Box mt={30} textAlign=\"center\">\n      <Typography variant=\"h3\" fontWeight=\"bold\" mb={3}>\n        Final Score {Math.round(Number(score) * 100 / 7)}%\n      </Typography>\n      <Button onClick={handleBack} variant=\"outlined\">\n        back\n      </Button>\n    </Box>\n    </>\n    \n  );\n};\n\nexport default FinalScreen;\n","import { HashRouter as Router , Switch, Route } from \"react-router-dom\";\nimport LogIn from \"./pages/LogIn\";\nimport Questions from \"./pages/Questions\";\nimport FinalScreen from \"./pages/FinalScreen\";\n\nimport history from \"./history\";\n\nfunction App() {\n  return (\n    <Router history={history} basename=\"/\">\n          <Switch>\n            <Route path=\"/\" exact>\n              <LogIn />\n            </Route>\n            <Route path=\"/exam\">\n              <Questions />\n            </Route>\n            <Route path=\"/result\">\n              <FinalScreen />\n            </Route>\n          </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { CHANGE_SCORE, LOGIN_SUCCESS } from \"./actionsTypes\";\nimport { questions } from \"../data\";\n\n\nconst initialState = {\n  isLoggedIn: false,\n  user: null,\n  score: 0,\n  questions: questions.sort(() => Math.random() - 0.5)\n  \n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_SCORE:\n      return {\n        ...state,\n        score: action.payload,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: action.payload.user,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const questions = [\r\n    {\r\n      question: \"What is the capital of United Kingdom?\",\r\n      choices: [\"Manchester\", \"Birmingham\", \"London\", \"Birmingham\"],\r\n      answer: \"London\",\r\n    },\r\n\r\n    {\r\n      question: \"What is the capital of United States?\",\r\n      choices: [\"California\", \"New York\", \"Miami\", \"Florida\"],\r\n      answer: \"New York\",\r\n    },\r\n    {\r\n      question: \"What temperature does water boil at?\",\r\n      choices: [\r\n        \"50 degrees Celcius\",\r\n        \"25 degrees Celcius\",\r\n        \"100 degrees Celcius\",\r\n        \"150 degrees Celcius\",\r\n      ],\r\n      answer: \"100 degrees Celcius\",\r\n    },\r\n    {\r\n      question: \"Which is the only mammal that can’t jump?\",\r\n      choices: [\r\n        \"Dog\",\r\n        \"Elephant\",\r\n        \"Goat \",\r\n        \"Lion \",\r\n      ],\r\n      answer: \"Elephant\",\r\n    },\r\n    {\r\n      question: \"What colour is a panda?\",\r\n      choices: [\r\n        \"Green and Yellow\",\r\n        \"Blue and Red\",\r\n        \"Green and White\",\r\n        \"Black and White\",\r\n      ],\r\n      answer: \"Black and White\",\r\n    },\r\n    {\r\n      question: \"Where is the smallest bone in the human body?\",\r\n      choices: [\r\n        \"The Chest\",\r\n        \"The Ear\",\r\n        \"The Legs\",\r\n        \"The Hands\",\r\n      ],\r\n      answer: \"The Ear\",\r\n    },\r\n    {\r\n      question: \"Who painted the Mona Lisa?\",\r\n      choices: [\r\n        \"Alexander Graham Bell\",\r\n        \"Sir Isaac Newton\",\r\n        \"Leonardo Da Vinci\",\r\n        \"Albert Einstein\",\r\n      ],\r\n      answer: \"Leonardo Da Vinci\",\r\n    }\r\n  ]","import { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from \"redux-thunk\";\nimport reducer from \"./reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\nexport default createStore(reducer,  composeEnhancers(applyMiddleware(reduxThunk) ));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}